apply plugin: "java"

sourceCompatibility = 1.7
targetCompatibility = 1.7

task prepareDist {
    def cmdTimestamp = 'git show -s --format=%ct HEAD'
    def cmdSha = 'git show -s --pretty=%h'
    project.version = '3.' + cmdTimestamp.execute().text.trim() + '.' + cmdSha.execute().text.trim()
    println 'project version set to ' + project.version
}

repositories {
    mavenCentral()
    repositories { flatDir(dirs: "lib") }
}

configurations {
    dist
}

ext {
    ANT_DEB_VERSION = '0.0.1'
    HIBERNATE_ANNOTATION_VERSION = '3.5.6-Final'
    HIBERNATE_VERSION = '3.6.8.Final'
    JACKSON_JAXRS_JSON_VERSION = '2.2.3'
    JAVAASSIST_VERSION = '3.12.0.GA'
    JAVAX_MAIL_VERSION = '1.4'
    JERSEY_VERSION = '2.8'
    JNA_VERSION = '3.2.7'
    LIQUIBASE_VERSION = '3.0.7'
    POSTGRES_VERSION = '9.1-901.jdbc4'
    SLF4J_VERSION = '1.7.5'
    TEST_NG_VERSION = '6.5.1'
    TOMCAT_VERSION = '7.0.47'
}

dependencies {
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$ext.JACKSON_JAXRS_JSON_VERSION"
    compile "javax.mail:mail:$ext.JAVAX_MAIL_VERSION"
    compile "mikereedell-sunrisesunsetlib:mikereedell-sunrisesunsetlib"
    compile "com.github.zgmnkv:zwave4j:0.2-SNAPSHOT"
    compile "net.java.dev.jna:jna:$ext.JNA_VERSION"
    compile "org.apache.tomcat.embed:tomcat-embed-core:$ext.TOMCAT_VERSION"
    compile "org.apache.tomcat.embed:tomcat-embed-logging-juli:$ext.TOMCAT_VERSION"
    compile "org.glassfish.jersey.containers:jersey-container-servlet:$ext.JERSEY_VERSION"
    compile "org.glassfish.jersey.core:jersey-client:$ext.JERSEY_VERSION"
    compile "org.glassfish.jersey.media:jersey-media-sse:$ext.JERSEY_VERSION"
    compile "org.hibernate:hibernate-annotations:$ext.HIBERNATE_ANNOTATION_VERSION"
    compile "org.liquibase:liquibase-core:$ext.LIQUIBASE_VERSION"
    compile "org.slf4j:slf4j-api:$ext.SLF4J_VERSION"
    runtime "javassist:javassist:$ext.JAVAASSIST_VERSION" // required for hibernate
    runtime "org.glassfish.jersey.ext:jersey-bean-validation:$ext.JERSEY_VERSION" // required for jersey
    runtime "org.hibernate:hibernate-core:$ext.HIBERNATE_VERSION"
    runtime "org.slf4j:slf4j-nop:$ext.SLF4J_VERSION"
    runtime "postgresql:postgresql:$ext.POSTGRES_VERSION"
    testCompile "org.testng:testng:$ext.TEST_NG_VERSION"
    dist "ant-deb:ant-deb:$ext.ANT_DEB_VERSION"
}

jar {
    from {
        configurations.compile.collect { project.zipTree(it) }
        configurations.runtime.collect { project.zipTree(it) }
    }

    manifest {
        attributes "Main-Class": "com.homeki.core.main.Main"
        attributes "Implementation-Version": version
    }
}

test {
    useTestNG()

    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }

    onlyIf { Boolean.getBoolean('runTests') }
}

task dist(dependsOn: jar) << {
    println 'building deb ' + version
    new File("build/dist").mkdir()

    ant.taskdef(name: "deb", classname: "com.googlecode.ant_deb_task.Deb", classpath: configurations.dist.asPath)
    ant.deb(todir: "build/dist", package: "homeki", section: "misc",  depends: "openjdk-7-jre-headless, postgresql, telldus, owfs, libjna-java", prerm: "dist/prerm",  postinst: "dist/postinst", preinst: "dist/preinst", architecture: "all", version: version) {
        description(synopsis: "Unified interface for all your sensors and devices connected to your computer.", "Provides a REST HTTP API for accessing, logging, modifying and managing various devices and sensors connected to your computer.")
        maintainer(name: "Homeki Development Team", email: "contact@homeki.com")
        tarfileset(file: "build/libs/homekicore-${version}.jar", fullpath: "/opt/homeki/homekicore.jar", filemode: "755")
        tarfileset(file: "dist/homekid", prefix: "/etc/init.d/", filemode: "755")
        tarfileset(file: "dist/06-zwave.rules", prefix: "/etc/udev/rules.d/", filemode: "644")
        tarfileset(file: "dist/start.sh", prefix: "/opt/homeki/", filemode: "755")
        tarfileset(file: "logging.properties", prefix: "/opt/homeki/", filemode: "755")
    }
}
